.gitignore: This file specifies which files and directories should be ignored by Git version control system.

index.html: This is the main HTML file that serves as the entry point for the Electron application. It contains the structure and layout of the application.

main.js: This file is the main process file for Electron. It sets up the Electron application, creates windows, handles events, and communicates with the operating system.

package-lock.json: This file is automatically generated by npm and serves as a lock file to ensure that the same dependencies are installed when the project is built or run.

package.json: This file contains metadata about the project, including the project's name, version, dependencies, and scripts.

preload.js: This file is used to preload scripts into the renderer process of Electron. It provides a secure way to access Node.js APIs from the renderer process.

tree.txt: This file seems to be a text file that lists the directory structure of the software.

vite.config.js: This file is the configuration file for Vite, a build tool for web applications. It specifies the settings and options for building the software.

notes.json: This file is located in the data directory and contains the notes for the word book page. It likely stores the vocabulary words and their corresponding definitions or explanations.

dicts directory: This directory contains JSON files for different vocabulary lists, such as "Bio Vocabulary (179 Words).json", "GRE warm up (240 words).json", "important words for college students lyas K. (274 Words).json", "The GRE Quantitative Reasoning Test Arithmetic.json", and "TOEFL Vocabulary (1000 Words).json". These files likely contain the vocabulary words and their definitions or explanations for each specific list.

config.json: This file is located in the public directory and may contain configuration settings for the software, such as font size, background color, and learning mode.

src directory: This directory contains the source code of the software.

App.vue: This is the root component of the Vue.js application. It serves as the container for other components and defines the overall structure and layout of the application.

naiveui.js: This file is likely a script that imports and configures the Naive UI library, which provides UI components for the software.

style.css: This file contains the CSS styles for the application.

components directory: This directory contains Vue components that are used throughout the application, such as Adjustzoom.vue, Icon.vue, InputNumber.vue, Navigator.vue, NotesList.vue, RoundButton.vue, and Search.vue. These components define the visual and interactive elements of the application.

composables directory: This directory likely contains JavaScript modules that provide reusable logic for the application, such as the settings.js module for managing application settings.

routes directory: This directory likely contains the routing configuration for the application, including the index.js file which specifies the routes and their corresponding components.

store directory: This directory likely contains the Vuex store configuration for state management in the application. The store.js file may define the store modules and their state, mutations, actions, and getters.

views directory: This directory contains the Vue components that represent different pages or views of the application, such as About.vue (Introduction of this software), Recite.vue (Word recitation page), Books.vue (Word books page), and Settings.vue(adjustable setting of the software). If the user clicks one book in Books.vue then it will link to the Recite.vue and display the corresponding words. These components define the content and functionality of each page. 

Please note that this explanation is based on the provided directory tree, and the exact functionality of each file may vary depending on the specific implementation and code inside them [5] [6].